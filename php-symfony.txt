//========================================
// symfony command line segments
//========================================
$ /opt/lampp/bin/php ./bin/console 
Symfony 3.4.14 (kernel: app, env: dev, debug: true)
Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switches off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about               Displays information about the current project
  help                Displays help for a command
  list                Lists commands
 assets
  assets:install      Installs bundles web assets under a public directory
 cache
  cache:clear         Clears the cache
  cache:pool:clear    Clears cache pools
  cache:pool:prune    Prunes cache pools
  cache:warmup        Warms up an empty cache
 config
  config:dump-reference  Dumps the default configuration for an extension
 debug
  debug:autowiring       Lists classes/interfaces you can use for autowiring
  debug:config           Dumps the current configuration for an extension
  debug:container        Displays current services for an application
  debug:event-dispatcher Displays configured listeners for an application
  debug:form             Displays form type information
  debug:router           Displays current routes for an application
  debug:swiftmailer      [swiftmailer:debug] Displays current mailers for an application
  debug:twig             Shows a list of twig functions, filters, globals and tests
 doctrine
  doctrine:cache:clear-collection-region  Clear a second-level cache collection region.
  doctrine:cache:clear-entity-region      Clear a second-level cache entity region.
  doctrine:cache:clear-metadata           Clears all metadata cache for an entity manager
  doctrine:cache:clear-query              Clears all query cache for an entity manager
  doctrine:cache:clear-query-region       Clear a second-level cache query region.
  doctrine:cache:clear-result             Clears result cache for an entity manager
  doctrine:cache:contains                 Check if a cache entry exists
  doctrine:cache:delete                   Delete a cache entry
  doctrine:cache:flush                    [doctrine:cache:clear] Flush a given cache
  doctrine:cache:stats                    Get stats on a given cache provider
  doctrine:database:create                Creates the configured database
  doctrine:database:drop                  Drops the configured database
  doctrine:database:import                Import SQL file(s) directly to Database.
  doctrine:ensure-production-settings     Verify that Doctrine is properly configured for a production environment.
  doctrine:generate:crud                  [generate:doctrine:crud] Generates a CRUD based on a Doctrine entity
  doctrine:generate:entities              [generate:doctrine:entities] Generates entity classes and method stubs from your 
                                                                       mapping information
  doctrine:generate:entity                [generate:doctrine:entity] Generates a new Doctrine entity inside a bundle
  doctrine:generate:form                  [generate:doctrine:form] Generates a form type class based on a Doctrine entity
  doctrine:mapping:convert                [orm:convert:mapping] Convert mapping information between supported formats.
  doctrine:mapping:import                 Imports mapping information from an existing database
  doctrine:mapping:info                   
  doctrine:query:dql                      Executes arbitrary DQL directly from the command line.
  doctrine:query:sql                      Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                  Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                    Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                  Executes (or dumps) the SQL needed to update the database schema to match the 
                                          current mapping metadata.
  doctrine:schema:validate                Validate the mapping files.
 generate
  generate:bundle                         Generates a bundle
  generate:command                        Generates a console command
  generate:controller                     Generates a controller
 lint
  lint:twig                               Lints a template and outputs encountered errors
  lint:xliff                              Lints a XLIFF file and outputs encountered errors
  lint:yaml                               Lints a file and outputs encountered errors
 router
  router:match                            Helps debug routes by simulating a path info match
 security
  security:check                          Checks security issues in your project dependencies
  security:encode-password                Encodes a password.
 server
  server:log                              Starts a log server that displays logs in real time
  server:run                              Runs a local web server
  server:start                            Starts a local web server in the background
  server:status                           Outputs the status of the local web server for the given address
  server:stop                             Stops the local web server that was started with the server:start command
 swiftmailer
  swiftmailer:email:send                  Send simple email message
  swiftmailer:spool:send                  Sends emails from the spool
----------------------------------------------------------------------------
Installation
--------------
$ composer/composer.phar install --- installs packages as mentioned in composer.lock, fallback to composer.json
$ composer/composer.phar show(info) --- both cases shows the information of the packages installed
------------------------------------
composer/ca-bundle      1.1.1   Lets you find a path to the system CA bundle, and includes a fallback to the Mozilla CA bundle.
doctrine/annotations    v1.4.0  Docblock Annotations Parser
doctrine/cache          v1.6.2  Caching library offering an object-oriented API for many cache backends
doctrine/collections    v1.4.0  Collections Abstraction library
doctrine/common         v2.7.3  Common Library for Doctrine projects
doctrine/dbal           v2.5.13 Database Abstraction Layer
doctrine/doctrine-bundle  1.9.1   Symfony DoctrineBundle
doctrine/doctrine-cache-bundle  1.3.3   Symfony Bundle for Doctrine Cache
doctrine/inflector              v1.1.0  Common String Manipulations with regard to casing and singular/plural rules.
doctrine/instantiator   1.0.5   A small, lightweight utility to instantiate objects in PHP without invoking their constructors
doctrine/lexer          v1.0.1  Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.
doctrine/orm            v2.5.14 Object-Relational-Mapper for PHP
dts/ebay-sdk-php        18.0.0  An eBay SDK for PHP. Use the eBay API in your PHP projects.
fig/link-util           1.0.0   Common utility implementations for HTTP links
guzzlehttp/guzzle       6.3.3   Guzzle is a PHP HTTP client library
guzzlehttp/promises     v1.3.1  Guzzle promises library
guzzlehttp/psr7         1.4.2   PSR-7 message implementation that also provides common utility methods
incenteev/composer-parameter-handler v2.1.3  Composer script handling your ignored parameter file
jdorn/sql-formatter     v1.2.17 a PHP SQL highlighting library
monolog/monolog         1.23.0  Sends your logs to files, sockets, inboxes, databases and various web services
paragonie/random_compat  v2.0.17 PHP 5.x polyfill for random_bytes() and random_int() from PHP 7
psr/cache               1.0.1   Common interface for caching libraries
psr/container           1.0.0   Common Container Interface (PHP FIG PSR-11)
psr/http-message        1.0.1   Common interface for HTTP messages
psr/link                1.0.0   Common interfaces for HTTP links
psr/log                 1.0.2   Common interface for logging libraries
psr/simple-cache        1.0.1   Common interfaces for simple caching
sensio/distribution-bundle    v5.0.22 Base bundle for Symfony Distributions
sensio/framework-extra-bundle v5.2.0  This bundle provides a way to configure your controllers with annotations
sensio/generator-bundle       v3.1.7  This bundle generates code for you
sensiolabs/security-checker   v4.1.8  A security checker for your composer.lock
swiftmailer/swiftmailer       v5.4.12 Swiftmailer, free feature-rich PHP mailer
symfony/monolog-bundle        v3.3.0  Symfony MonologBundle
symfony/phpunit-bridge        v3.4.14 Symfony PHPUnit Bridge
symfony/polyfill-apcu         v1.8.0  Symfony polyfill backporting apcu_* functions to lower PHP versions
symfony/polyfill-ctype        v1.8.0  Symfony polyfill for ctype functions
symfony/polyfill-intl-icu     v1.8.0  Symfony polyfill for intl's ICU-related data and classes
symfony/polyfill-mbstring     v1.8.0  Symfony polyfill for the Mbstring extension
symfony/polyfill-php56        v1.8.0  Symfony polyfill backporting some PHP 5.6+ features to lower PHP versions
symfony/polyfill-php70        v1.8.0  Symfony polyfill backporting some PHP 7.0+ features to lower PHP versions
symfony/polyfill-util         v1.8.0  Symfony utilities for portability of PHP codes
symfony/swiftmailer-bundle    v2.6.7  Symfony SwiftmailerBundle
symfony/symfony               v3.4.14 The Symfony PHP framework
twig/twig                     v1.35.4 Twig, the flexible, fast, and secure template language for PHP
---------------------------------------------------------------------------------------------------------
Configuration can be checked from browser:
-------------------------------------------
http://symfonyv34/web/config.php  --- shows the configuration options to make symfony experience better

-----------------------------------------------
Using .htaccess to redirect to the main folder
-----------------------------------------------
<IfModule mod_rewrite.c>
    Options +FollowSymlinks
    RewriteEngine On

    # Explicitly disable rewriting for front controllers
    RewriteRule ^/web/app_dev.php - [L]
    RewriteRule ^/web/app.php - [L]

    # Fix the bundles folder
    RewriteRule ^bundles/(.*)$ /web/bundles/$1  [QSA,L]

    # Fix the assets folder
    RewriteRule ^assets/(.*)$ /web/assets/$1  [QSA,L]

    RewriteCond %{REQUEST_FILENAME} !-f
    # Change below before deploying to production
    #RewriteRule ^(.*)$ /web/app.php [QSA,L]
    RewriteRule ^(.*)$ /web/app_dev.php [QSA,L]
</IfModule>
-----------------------------------------------------------------
https://undebugable.wordpress.com/2014/11/12/symfony2-htaccess-to-redirect-request-from-web-to/
Symfony2 HTACCESS file to remove 'web' folder from url

Defaul url http://mydomain.com/web/action
Wanted url  http://mydomain.com/action

<IfModule mod_rewrite.c>
    Options +FollowSymlinks
    RewriteEngine On

    # Explicitly disable rewriting for front controllers
    RewriteRule ^/web/app_dev.php - [L]
    RewriteRule ^/web/app.php - [L]

    # Fix the bundles folder
    RewriteRule ^bundles/(.*)$ /web/bundles/$1  [QSA,L]

    RewriteCond %{REQUEST_FILENAME} !-f
    # Change below before deploying to production
    #RewriteRule ^(.*)$ /web/app.php [QSA,L]
    RewriteRule ^(.*)$ /web/app_dev.php [QSA,L]
</IfModule>
-------------------------------------------------------------------
https://gist.github.com/bocharsky-bw/3dc373b373275846b6de
#path/to/project/.htaccess

# Rewrite all requests to subdirectory, except exists file requests
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ /web/$1 [QSA,L]
</IfModule>
-------------
#path/to/project/web/.htaccess

# Remove subdirectory and app.php file from request URI
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /(app\.php|app_dev\.php|config\.php|web/(?!app_dev\.php|config\.php))
    RewriteRule ^(app\.php|app_dev\.php|config\.php)?/?(.*)$ /$2 [R=301,L]
</IfModule>




